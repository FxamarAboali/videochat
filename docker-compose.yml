# This file used for both developer and demo purposes.
# It contains environment
version: '3.7'

services:
  # static server
  nginx:
    image: nginx:1.16.0
    restart: unless-stopped
    ports:
      - 8081:80
    volumes:
      - ./frontend-nginx:/usr/share/nginx/html:ro
      - ./docker/nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
  postgres-keycloak:
    image: postgres:12.2
    restart: unless-stopped
    hostname: postgres-keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
  keycloak:
    image: jboss/keycloak:9.0.0
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak-container.rule=Host(`auth.site.local`)
      - traefik.http.services.keycloak-service.loadbalancer.server.port=8080
      - traefik.http.routers.keycloak-container.entrypoints=http
    volumes:
      - ./docker/keycloak-realm-export.json:/var/migration/realm1.json
      - ./docker/keycloak-scripts-launchers:/opt/jboss/startup-scripts
      - ./docker/keycloak-scripts:/opt/jboss/my-cli-scripts
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_HOSTNAME: auth.site.local
      KEYCLOAK_IMPORT: /var/migration/realm1.json
    ports:
      - 8844:8844
    networks:
      backend:
        aliases:
          - auth.site.local
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
  # fix 'aud' claim and 'client_id' do not match: https://stackoverflow.com/questions/53550321/keycloak-gatekeeper-aud-claim-and-client-id-do-not-match/53627747#53627747
  gatekeeper:
    image: keycloak/keycloak-gatekeeper:7.0.0
    restart: unless-stopped
    # https://www.keycloak.org/docs/latest/securing_apps/index.html#_keycloak_generic_adapter
    volumes:
      - ./docker/keycloak-gatekeeper.yml:/etc/keycloak-auth-proxy.conf
    command:
      ["--config=/etc/keycloak-auth-proxy.conf"]
    labels:
      - traefik.enable=true
      - traefik.http.routers.gatekeeper-container.rule=Host(`site.local`)
      - traefik.http.services.gatekeeper-service.loadbalancer.server.port=3000
      - traefik.http.routers.gatekeeper-container.entrypoints=http
    networks:
      backend:
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"
  traefik:
    image: traefik:v2.1.6
    hostname: traefik
    restart: unless-stopped
    # The Static Configuration
    command: --configFile=/traefik_conf/traefik.yml
    ports:
      - 8080:80
      - 8010:8080
    extra_hosts:
      # hosts to go outside from docker network to host-deployed chat app
      # When you apply firewalld rule these requests will go to you IDE-launched chat app
      # see also network definition in bottom
      - "chat.site.local:172.28.0.1"
      - "site.local:172.28.0.1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik_conf:/traefik_conf
    networks:
      backend:
        aliases:
          - api-gateway.site.local
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "1"

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        # Also see firewalld rule in readme.md "Allow container -> host"
        - subnet: 172.28.0.0/24
