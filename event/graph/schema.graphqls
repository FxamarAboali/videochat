scalar Time
scalar Int64
scalar UUID

type Participant {
    id:     Int64!
    login:  String!
    avatar: String
    shortInfo:           String
}

type EmbedMessageResponse {
    id:     Int64!
    chatId: Int64
    chatName: String
    text:   String!
    owner:  Participant
    embedType: String!
    isParticipant: Boolean!
}

type DisplayMessageDto {
    id:             Int64!
    text:           String!
    chatId:         Int64!
    ownerId:        Int64!
    createDateTime: Time!
    editDateTime:   Time
    owner:          Participant
    canEdit:        Boolean!
    canDelete:      Boolean!
    fileItemUuid:   UUID
    embedMessage:   EmbedMessageResponse
    pinned:         Boolean!
    blogPost:       Boolean!
    pinnedPromoted: Boolean
}

type MessageDeletedDto {
    id:             Int64!
    chatId:             Int64!
}

type ParticipantWithAdmin {
    id:     Int64!
    login:  String!
    avatar: String
    admin: Boolean!
    shortInfo:           String
}

type ChatDto {
    id:             Int64!
    name:                String!
    avatar:              String
    avatarBig:           String
    shortInfo:           String
    lastUpdateDateTime:  Time!
    participantIds:      [Int64!]!
    canEdit:             Boolean
    canDelete:           Boolean
    canLeave:            Boolean
    unreadMessages:      Int64!
    canBroadcast:        Boolean!
    canVideoKick:        Boolean!
    canChangeChatAdmins: Boolean!
    tetATet:             Boolean!
    canAudioMute:        Boolean!
    participants:             [ParticipantWithAdmin!]!
    participantsCount:        Int!
    canResend:           Boolean!
    availableToSearch:   Boolean!
    isResultFromSearch:  Boolean
    pinned:              Boolean!
    blog:              Boolean!
}

type ChatDeletedDto {
    id:             Int64!
}

type UserTypingDto {
    login: String!
    participantId: Int64!
}

type MessageBroadcastNotification {
    login: String!
    userId: Int64!
    text: String!
}

type PreviewCreatedEvent {
    id: String!
    url: String!
    previewUrl: String
    aType: String
    correlationId: String
}

type PinnedMessageEvent {
    message: DisplayMessageDto!
    totalCount: Int64!
}

type FileInfoDto {
    id: String!
    filename: String!
    url: String!
    publicUrl: String
    previewUrl: String
    size: Int64!
    canDelete:           Boolean!
    canEdit:             Boolean!
    canShare:             Boolean!
    lastModified: Time!
    ownerId: Int64!
    owner:  Participant
    canPlayAsVideo:           Boolean!
    canShowAsImage:  Boolean!
    canPlayAsAudio:  Boolean!
}

type WrappedFileInfoDto {
    fileInfoDto: FileInfoDto
    count: Int64!
    fileItemUuid: UUID!
}

type ChatEvent {
    eventType:                String!
    messageEvent: DisplayMessageDto
    messageDeletedEvent: MessageDeletedDto
    userTypingEvent: UserTypingDto
    messageBroadcastEvent: MessageBroadcastNotification
    previewCreatedEvent: PreviewCreatedEvent
    participantsEvent: [ParticipantWithAdmin!]
    promoteMessageEvent: PinnedMessageEvent
    fileEvent: WrappedFileInfoDto
}

type VideoUserCountChangedDto {
    usersCount: Int64!
    chatId: Int64!
}

type VideoCallScreenShareChangedDto {
    chatId: Int64!
    hasScreenShares: Boolean!
}

type VideoRecordingChangedDto {
    recordInProgress: Boolean!
    chatId: Int64!
}

type VideoCallInvitationDto {
    chatId: Int64!
    chatName: String!
    status: String!
}

type VideoDialChanged {
    userId: Int64!
    status: String!
}

type VideoDialChanges {
    chatId: Int64!
    dials: [VideoDialChanged!]!
}

type ChatUnreadMessageChanged {
    chatId: Int64!
    unreadMessages: Int64!
    lastUpdateDateTime:  Time!
}

type AllUnreadMessages {
    allUnreadMessages: Int64!
}

type NotificationDto {
    id: Int64!
    chatId: Int64!
    messageId: Int64
    notificationType: String!
    description: String!
    createDateTime: Time!
    byUserId: Int64!
    byLogin:  String!
    chatTitle: String!
}

type GlobalEvent {
    eventType:                String!
    chatEvent: ChatDto
    chatDeletedEvent: ChatDeletedDto
    participantEvent: Participant
    videoUserCountChangedEvent: VideoUserCountChangedDto
    videoRecordingChangedEvent: VideoRecordingChangedDto
    videoCallInvitation: VideoCallInvitationDto
    videoParticipantDialEvent: VideoDialChanges
    unreadMessagesNotification: ChatUnreadMessageChanged
    allUnreadMessagesNotification: AllUnreadMessages
    notificationEvent: NotificationDto
    videoCallScreenShareChangedDto: VideoCallScreenShareChangedDto
}

type UserStatusEvent {
    userId:     Int64!
    online:     Boolean
    isInVideo:  Boolean
    eventType:  String!
}

type OAuth2Identifiers {
    facebookId: String
    vkontakteId: String
    googleId: String
    keycloakId: String
}

type UserAccountDto {
    id:         Int64!
    login:      String!
    avatar:     String # url
    avatarBig:  String # url
    shortInfo: String
    lastLoginDateTime: Time
    oauth2Identifiers: OAuth2Identifiers
}

type DataDTO {
    enabled: Boolean!
    expired: Boolean!
    locked: Boolean!
    confirmed: Boolean!
    roles: [String!]!
}

type UserAccountExtendedDto {
    id:         Int64!
    login:      String!
    avatar:     String # url
    avatarBig:  String # url
    shortInfo: String
    lastLoginDateTime: Time
    oauth2Identifiers: OAuth2Identifiers
    additionalData: DataDTO!
    canLock: Boolean!
    canDelete: Boolean!
    canChangeRole: Boolean!
}

union UserAccountEventDto = UserAccountDto | UserAccountExtendedDto

type UserAccountEvent {
    eventType:  String!
    userAccountEvent: UserAccountEventDto
}

type Query {
    ping: Boolean
}

type Subscription {
    chatEvents(chatId: Int64!): ChatEvent!
    globalEvents: GlobalEvent!
    userStatusEvents(userIds: [Int64!]!): [UserStatusEvent!]!
    userAccountEvents(userIds: [Int64!]!): UserAccountEvent!
}
